name: Build and Deploy Docker Image

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-deploy-dev:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build Docker image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/aspdotnetapp:latest .

    - name: Push Docker image to Docker Hub
      run: |
        docker push ${{ secrets.DOCKER_USERNAME }}/aspdotnetapp:latest

    - name: Setup SSH for DEV
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.DEV_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H ${{ secrets.DEV_EC2_HOST }} >> ~/.ssh/known_hosts

    - name: Deploy to AWS EC2 DEV
      env:
        DEV_EC2_HOST: ${{ secrets.DEV_EC2_HOST }}
      run: |
        ssh -o StrictHostKeyChecking=no ubuntu@$DEV_EC2_HOST << 'EOF'
          sudo docker pull ${{ secrets.DOCKER_USERNAME }}/aspdotnetapp:latest
          sudo docker stop aspdotnetapp || true
          sudo docker rm aspdotnetapp || true
          sudo docker run -d --name aspdotnetapp -p 8080:8080 ${{ secrets.DOCKER_USERNAME }}/aspdotnetapp:latest
        EOF

  approval:
    runs-on: ubuntu-latest
    needs: build-and-deploy-dev

    steps:
    - name: Send approval request
      id: send_approval_request
      uses: peter-evans/create-issue-from-file@v2
      with:
        title: 'Deployment Approval Request'
        assignees: 'theabdullahchaudhary'  # Replace with your GitHub username
        labels: 'approval'
        body: |
          Please approve this deployment by commenting :+1: on this issue.

    - name: Wait for approval
      uses: andstor/wait-for-approval@v1
      with:
        issue-number: ${{ steps.send_approval_request.outputs.number }}
        repository-token: ${{ secrets.GITHUB_TOKEN }}

  manual-approval-and-deploy-prod:
    runs-on: ubuntu-latest
    needs: approval

    steps:
    - name: Setup SSH for PROD
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.PROD_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H ${{ secrets.PROD_EC2_HOST }} >> ~/.ssh/known_hosts

    - name: Deploy to AWS EC2 PROD
      env:
        PROD_EC2_HOST: ${{ secrets.PROD_EC2_HOST }}
      run: |
        ssh -o StrictHostKeyChecking=no ubuntu@$PROD_EC2_HOST << 'EOF'
          sudo docker pull ${{ secrets.DOCKER_USERNAME }}/aspdotnetapp:latest
          sudo docker stop aspdotnetapp || true
          sudo docker rm aspdotnetapp || true
          sudo docker run -d --name aspdotnetapp -p 8080:8080 ${{ secrets.DOCKER_USERNAME }}/aspdotnetapp:latest
        EOF
